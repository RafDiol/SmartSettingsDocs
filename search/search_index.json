{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Smart Settings Smart Settings is a library that allows you to store and access data stored in a designated file during runtime. It creates a save file that stores the data in a json format so it can be distributed if necessary. Get familiar with the library by checking out quick start","title":"Home"},{"location":"#smart-settings","text":"Smart Settings is a library that allows you to store and access data stored in a designated file during runtime. It creates a save file that stores the data in a json format so it can be distributed if necessary. Get familiar with the library by checking out quick start","title":"Smart Settings"},{"location":"quick_start/","text":"Quick Start In this quick start guide we will be making an app that stores and the and the age of our user. string name ; int age ; // Get the values we need Console . WriteLine ( \"Whats your name?\" ); name = Console . ReadLine (); Console . WriteLine ( \"Whats your age?\" ); age = int . Parse ( Console . ReadLine ()); // Store the values Settings settings = new Settings ( \"App.sett\" ); // Initialize our setting class settings . EncodeString ( \"name\" , name ); settings . EncodeInt ( \"age\" , age ); // Read the values Console . WriteLine ( $\"Hello, {settings.DecodeString(\" name \")}\" ); Console . WriteLine ( $\"You are {settings.DecodeInt(\" age \")}\" ); Even though we can now read and write from the settings file this does not mean that the changes made have been physically been written on the disk yet. Always remember to call settings.Save() before your app terminates so that any changes made are written to the disk.","title":"Quick Start"},{"location":"quick_start/#quick-start","text":"In this quick start guide we will be making an app that stores and the and the age of our user. string name ; int age ; // Get the values we need Console . WriteLine ( \"Whats your name?\" ); name = Console . ReadLine (); Console . WriteLine ( \"Whats your age?\" ); age = int . Parse ( Console . ReadLine ()); // Store the values Settings settings = new Settings ( \"App.sett\" ); // Initialize our setting class settings . EncodeString ( \"name\" , name ); settings . EncodeInt ( \"age\" , age ); // Read the values Console . WriteLine ( $\"Hello, {settings.DecodeString(\" name \")}\" ); Console . WriteLine ( $\"You are {settings.DecodeInt(\" age \")}\" ); Even though we can now read and write from the settings file this does not mean that the changes made have been physically been written on the disk yet. Always remember to call settings.Save() before your app terminates so that any changes made are written to the disk.","title":"Quick Start"},{"location":"settings_class/","text":"Settings Class Description This class represents your settings file and can be used to read, write and physically write any changes made to the save file. Constructors Signature Description string filepath The path of the setting file Public Methods Method Parameters Return Type Description EncodeString string key, string data bool Stores a string . Returns true if the operation was successful DecodeString string key string Reads a string RemoveString string key bool Removes a setting that stores a string . Returns true if successfully found and removed EncodeInt string key, int data bool Stores an int . Returns true if the operation was successful DecodeInt string key int Reads an int RemoveInt string key bool Removes a setting that stores an int . Returns true if successfully found and removed EncodeDouble string key, double data bool Stores a double . Returns true if the operation was successful DecodeDouble string key double Reads a double RemoveDouble string key bool Removes a setting that stores a double . Returns true if successfully found and removed EncodeBool string key, bool data bool Stores a bool . Returns true if the operation was successful DecodeBool string key bool Reads a bool RemoveBool string key bool Removes a setting that stores a bool . Returns true if successfully found and removed EncodeStringList string key, List<string> data bool Stores a List<string> . Returns true if the operation was successful DecodeStringList string key List<string> Reads a List<string> RemoveStringList string key bool Removes a setting that stores a List<string> . Returns true if successfully found and removed EncodeIntList string key, List<int> data bool Stores a List<int> . Returns true if the operation was successful DecodeIntList string key List<int> Reads a List<int> RemoveIntList string key bool Removes a setting that stores a List<int> . Returns true if successfully found and removed Save - void Writes all the changes to the disk. Make sure to call this method before terminating your program Public Variables Variable Name Type filepath string","title":"Settings Class"},{"location":"settings_class/#settings-class","text":"","title":"Settings Class"},{"location":"settings_class/#description","text":"This class represents your settings file and can be used to read, write and physically write any changes made to the save file.","title":"Description"},{"location":"settings_class/#constructors","text":"Signature Description string filepath The path of the setting file","title":"Constructors"},{"location":"settings_class/#public-methods","text":"Method Parameters Return Type Description EncodeString string key, string data bool Stores a string . Returns true if the operation was successful DecodeString string key string Reads a string RemoveString string key bool Removes a setting that stores a string . Returns true if successfully found and removed EncodeInt string key, int data bool Stores an int . Returns true if the operation was successful DecodeInt string key int Reads an int RemoveInt string key bool Removes a setting that stores an int . Returns true if successfully found and removed EncodeDouble string key, double data bool Stores a double . Returns true if the operation was successful DecodeDouble string key double Reads a double RemoveDouble string key bool Removes a setting that stores a double . Returns true if successfully found and removed EncodeBool string key, bool data bool Stores a bool . Returns true if the operation was successful DecodeBool string key bool Reads a bool RemoveBool string key bool Removes a setting that stores a bool . Returns true if successfully found and removed EncodeStringList string key, List<string> data bool Stores a List<string> . Returns true if the operation was successful DecodeStringList string key List<string> Reads a List<string> RemoveStringList string key bool Removes a setting that stores a List<string> . Returns true if successfully found and removed EncodeIntList string key, List<int> data bool Stores a List<int> . Returns true if the operation was successful DecodeIntList string key List<int> Reads a List<int> RemoveIntList string key bool Removes a setting that stores a List<int> . Returns true if successfully found and removed Save - void Writes all the changes to the disk. Make sure to call this method before terminating your program","title":"Public Methods"},{"location":"settings_class/#public-variables","text":"Variable Name Type filepath string","title":"Public Variables"}]}